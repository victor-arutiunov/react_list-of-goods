{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","listVisibility","isGoodsReversed","goodsSortBy","goodLength","makeVisible","setState","goodsReverse","setGoodsSortParam","param","resetSortSettings","selectHandle","event","target","value","goodsCopy","this","filter","good","length","reverse","sort","g1","g2","localeCompare","className","type","onClick","name","id","onChange","Array","fill","map","element","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA8HaC,E,4MA1HbC,MAAQ,CACNC,MAAOH,EACPI,gBAAgB,EAChBC,iBAAiB,EACjBC,YAAa,cACbC,WAAY,G,EAGdC,YAAc,WACZ,EAAKC,UACH,SAAAP,GAAK,MAAK,CAAEE,gBAAiBF,EAAME,oB,EAIvCM,aAAe,WACb,EAAKD,UACH,SAAAP,GAAK,MAAK,CAAEG,iBAAkBH,EAAMG,qB,EAIxCM,kBAAoB,SAACC,GACnB,EAAKH,SAAS,CAAEH,YAAaM,K,EAG/BC,kBAAoB,WAClB,EAAKJ,SAAS,CACZJ,iBAAiB,EACjBC,YAAa,cACbC,WAAY,K,EAIhBO,aAAe,SAACC,GACd,EAAKN,SAAS,CAAEF,WAAYQ,EAAMC,OAAOC,S,4CAG3C,WAAU,IAAD,OACDC,EAAY,YAAIC,KAAKjB,MAAMC,OAAOiB,QACtC,SAAAC,GAAI,OAAIA,EAAKC,QAAU,EAAKpB,MAAMK,cAkBpC,OAfIY,KAAKjB,MAAMG,iBACba,EAAUK,UAGZL,EAAUM,MAAK,SAACC,EAAIC,GAClB,OAAQ,EAAKxB,MAAMI,aACjB,IAAK,SACH,OAAOmB,EAAGH,OAASI,EAAGJ,OACxB,IAAK,YACH,OAAOG,EAAGE,cAAcD,GAC1B,QACE,OAAO,MAKX,yBAAKE,UAAU,OACb,qCADF,gBAGG,IACA5B,EAAgBsB,OACjB,6BACA,4BAAQO,KAAK,SAASC,QAASX,KAAKX,aAEhCW,KAAKjB,MAAME,eACT,YAEA,aAKN,4BAAQyB,KAAK,SAASC,QAASX,KAAKT,cAApC,WAIA,4BACEmB,KAAK,SACLC,QAAS,kBAAO,EAAKnB,kBAAkB,eAFzC,uBAOA,4BAAQkB,KAAK,SAASC,QAASX,KAAKN,mBAApC,SAIA,4BACEgB,KAAK,SACLC,QAAS,kBAAO,EAAKnB,kBAAkB,YAFzC,kBAOA,4BACEoB,KAAK,aACLC,GAAG,aACHf,MAAOE,KAAKjB,MAAMK,WAClB0B,SAAUd,KAAKL,cAEdoB,MAAM,IAAIC,KAAK,IAAIC,KAAI,SAACC,EAASC,GAAV,OACtB,4BAAQrB,MAAOqB,EAAM,GAAIA,EAAM,OAKjCnB,KAAKjB,MAAME,gBACT,wBAAIwB,UAAU,aACXV,EAAUkB,KAAI,SAAAf,GAAI,OACjB,wBAAIiB,IAAKjB,GACNA,Y,GAhHDkB,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e215681d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    listVisibility: true,\n    isGoodsReversed: false,\n    goodsSortBy: 'withoutSort',\n    goodLength: 1,\n  }\n\n  makeVisible = () => {\n    this.setState(\n      state => ({ listVisibility: !state.listVisibility }),\n    );\n  }\n\n  goodsReverse = () => {\n    this.setState(\n      state => ({ isGoodsReversed: !state.isGoodsReversed }),\n    );\n  }\n\n  setGoodsSortParam = (param) => {\n    this.setState({ goodsSortBy: param });\n  }\n\n  resetSortSettings = () => {\n    this.setState({\n      isGoodsReversed: false,\n      goodsSortBy: 'withoutSort',\n      goodLength: 1,\n    });\n  }\n\n  selectHandle = (event) => {\n    this.setState({ goodLength: event.target.value });\n  }\n\n  render() {\n    const goodsCopy = [...this.state.goods].filter(\n      good => good.length >= this.state.goodLength,\n    );\n\n    if (this.state.isGoodsReversed) {\n      goodsCopy.reverse();\n    }\n\n    goodsCopy.sort((g1, g2) => {\n      switch (this.state.goodsSortBy) {\n        case 'length':\n          return g1.length - g2.length;\n        case 'alphabeth':\n          return g1.localeCompare(g2);\n        default:\n          return 0;\n      }\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        Goods length:\n        {' '}\n        {goodsFromServer.length}\n        <br />\n        <button type=\"button\" onClick={this.makeVisible}>\n          {\n            this.state.listVisibility ? (\n              'Hide list'\n            ) : (\n              'Show list'\n            )\n          }\n        </button>\n\n        <button type=\"button\" onClick={this.goodsReverse}>\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => (this.setGoodsSortParam('alphabeth'))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button type=\"button\" onClick={this.resetSortSettings}>\n          Reset\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => (this.setGoodsSortParam('length'))}\n        >\n          Sort by length\n        </button>\n\n        <select\n          name=\"goodLength\"\n          id=\"goodLength\"\n          value={this.state.goodLength}\n          onChange={this.selectHandle}\n        >\n          {Array(10).fill('').map((element, key) => (\n            <option value={key + 1}>{key + 1}</option>\n          ))}\n        </select>\n\n        {\n          this.state.listVisibility && (\n            <ul className=\"GoodsList\">\n              {goodsCopy.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}